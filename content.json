{"meta":{"title":"橘子的小站","subtitle":"","description":"","author":"橘子","url":"https://Lavender-z.github.io","root":"/"},"pages":[{"title":"关于","date":"2021-01-16T18:24:37.000Z","updated":"2021-01-21T17:38:14.140Z","comments":false,"path":"about/index.html","permalink":"https://lavender-z.github.io/about/index.html","excerpt":"","text":""},{"title":"归档","date":"2020-12-19T18:22:57.000Z","updated":"2021-01-23T18:24:19.927Z","comments":false,"path":"archives/index.html","permalink":"https://lavender-z.github.io/archives/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2020-12-19T18:24:20.000Z","updated":"2021-01-23T18:24:16.977Z","comments":false,"path":"link/index.html","permalink":"https://lavender-z.github.io/link/index.html","excerpt":"","text":""},{"title":"说说","date":"2020-12-20T08:41:00.000Z","updated":"2021-01-23T18:24:19.316Z","comments":false,"path":"artitalk/index.html","permalink":"https://lavender-z.github.io/artitalk/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-12-19T18:23:35.000Z","updated":"2021-01-23T18:24:18.663Z","comments":false,"path":"categories/index.html","permalink":"https://lavender-z.github.io/categories/index.html","excerpt":"","text":""},{"title":"相册","date":"2020-12-19T18:23:56.000Z","updated":"2021-01-23T18:24:17.972Z","comments":true,"path":"gallery/index.html","permalink":"https://lavender-z.github.io/gallery/index.html","excerpt":"","text":"壁纸 收藏的一些壁纸 漫威 关于漫威的图片 OH MY GIRL 关于OH MY GIRL的图片"},{"title":"标签","date":"2020-12-19T18:23:14.000Z","updated":"2021-01-23T18:24:16.248Z","comments":false,"path":"tags/index.html","permalink":"https://lavender-z.github.io/tags/index.html","excerpt":"","text":""},{"title":"留言板","date":"2020-12-20T09:48:32.000Z","updated":"2021-01-23T18:24:15.713Z","comments":true,"path":"talk/index.html","permalink":"https://lavender-z.github.io/talk/index.html","excerpt":"","text":"来自橘子的留言: 有什么想问的？ 有什么想说的？ 有什么想吐槽的？ 哪怕是有什么好吃的、好玩的地方，都可以告诉我哦~ 自动书记人偶竭诚为您服务！ 来自橘子的留言: 有什么想问的？ 有什么想说的？ 有什么想吐槽的？ 哪怕是有什么好吃的、好玩的地方，都可以告诉我哦~"}],"posts":[{"title":"关于博客主题的一些美化与魔改","slug":"Blog/BlogBeauty","date":"2020-12-26T02:30:42.000Z","updated":"2021-01-23T18:02:22.668Z","comments":true,"path":"2020/12/26/Blog/BlogBeauty/","link":"","permalink":"https://lavender-z.github.io/2020/12/26/Blog/BlogBeauty/","excerpt":"","text":"","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://lavender-z.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lavender-z.github.io/tags/hexo/"},{"name":"Github","slug":"Github","permalink":"https://lavender-z.github.io/tags/Github/"},{"name":"博客","slug":"博客","permalink":"https://lavender-z.github.io/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"使用 Matery 主题继续完成博客的搭建","slug":"Blog/BlogTheme_matery","date":"2020-12-24T08:12:03.000Z","updated":"2021-01-27T12:11:21.474Z","comments":true,"path":"2020/12/24/Blog/BlogTheme_matery/","link":"","permalink":"https://lavender-z.github.io/2020/12/24/Blog/BlogTheme_matery/","excerpt":"","text":"写在最前面","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://lavender-z.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lavender-z.github.io/tags/hexo/"},{"name":"Github","slug":"Github","permalink":"https://lavender-z.github.io/tags/Github/"},{"name":"博客","slug":"博客","permalink":"https://lavender-z.github.io/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"Matery","slug":"Matery","permalink":"https://lavender-z.github.io/tags/Matery/"}]},{"title":"使用 Butterfly 主题继续完成博客的搭建","slug":"Blog/BlogTheme_butterfly","date":"2020-12-22T08:12:03.000Z","updated":"2021-01-23T18:36:09.451Z","comments":true,"path":"2020/12/22/Blog/BlogTheme_butterfly/","link":"","permalink":"https://lavender-z.github.io/2020/12/22/Blog/BlogTheme_butterfly/","excerpt":"","text":"本篇文章仅介绍简单的使用，详情请参照官方文档 写在最前面 在利用 hexo 和 Github Page 搭建好博客后，会发现系统提供的主题都是一样的，看着感觉不太舒服，这时候我们可以选择自己利用 JavaScript、css 等对博客的板块进行设计（自己做别人眼中的大佬~），也可以在 Github上搜索一些大佬们设计的主题，然后 clone 下来进行使用。 下面就来介绍一下利用 Butterfly 主题来继续完成博客的搭建。 安装 Github安装Gitee安装npm安装稳定版【建议】 在博客根目录里 git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly 测试版 测试版可能存在 Bugs 最新的内容可在这里下载 git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly 升级方法：在主题目录下，运行git pull 稳定版【建议】 在博客根目录里 git clone -b master https://gitee.com/iamjerryw/hexo-theme-butterfly.git themes/butterfly 测试版 测试版可能存在 Bugs 最新的内容可在这里下载 git clone -b dev https://gitee.com/iamjerryw/hexo-theme-butterfly.git themes/butterfly 升级方法：在主题目录下，运行git pull 此方法只支持 Hexo 5.0.0以上版本 在博客根目录里 npm i hexo-theme-butterfly 升级方法：在博客根目录下，运行npm update hexo-theme-butterfly 应用主题 修改站点配置文件_config.yml，把主题改为butterfly theme: butterfly 插件安装 此时在设置完主题后还是会因为缺少插件而打不开，这时我们要进行下载。 npm install hexo-renderer-pug hexo-renderer-stylus --save 主题升级 请参照官方文档中的做法 相关配置 请参照官方文档中的做法 标签外挂（Tag Plugins） 标签外挂是 Hexo 独有的功能，并不是标准的 Markdown 格式。 以下的写法，只适用于 Butterfly 主题，用在其它主题上不会有效果，甚至可能会报错。使用前请留意！ Note (Bootstrap Callout) 用法1用法2&#123;% note [class] [no-icon] [style] %&#125;Any content (support inline tags too.io).&#123;% endnote %&#125; 名称 用法 class 【可选】标识（default / primary / success / info / warning / danger） no-icon 【可选】不显示 icon style 【可选】可以覆盖配置中的 style（simple / modern / flat / disabled） simple 默认 提示块标签 default 提示块标签 primary 提示块标签 success 提示块标签 info 提示块标签 warning 提示块标签 danger 提示块标签 &#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125; modern 默认 提示块标签 default 提示块标签 primary 提示块标签 success 提示块标签 info 提示块标签 warning 提示块标签 danger 提示块标签 &#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125; flat 默认 提示块标签 default 提示块标签 primary 提示块标签 success 提示块标签 info 提示块标签 warning 提示块标签 danger 提示块标签 &#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125; disabled 默认 提示块标签 default 提示块标签 primary 提示块标签 success 提示块标签 info 提示块标签 warning 提示块标签 danger 提示块标签 &#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125; no-icon 默认 提示块标签 default 提示块标签 primary 提示块标签 success 提示块标签 info 提示块标签 warning 提示块标签 danger 提示块标签 &#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;&#123;% note [color] [icon] [style] %&#125;Any content (support inline tags too.io).&#123;% endnote %&#125; 名称 用法 color 【可选】颜色(default / blue / pink / red / purple / orange / green) icon 【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon ) style 【可选】可以覆盖配置中的 style（simple / modern / flat / disabled） simple 你是刷 Visa 还是 UnionPay 新年快乐哦~ 司机一滴酒，亲人两行泪 大风车吱呀吱哟哟地转 电量低，请充电 石头剪刀布 前端最讨厌的浏览器 &#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;新年快乐哦~&#123;% endnote %&#125;&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;司机一滴酒，亲人两行泪&#123;% endnote %&#125;&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;大风车吱呀吱哟哟地转&#123;% endnote %&#125;&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;电量低，请充电&#123;% endnote %&#125;&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;石头剪刀布&#123;% endnote %&#125;&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125; modern 你是刷 Visa 还是 UnionPay 新年快乐哦~ 司机一滴酒，亲人两行泪 大风车吱呀吱哟哟地转 电量低，请充电 石头剪刀布 前端最讨厌的浏览器 &#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;新年快乐哦~&#123;% endnote %&#125;&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;司机一滴酒，亲人两行泪&#123;% endnote %&#125;&#123;% note red &#x27;fas fa-fan&#x27; modern %&#125;大风车吱呀吱哟哟地转&#123;% endnote %&#125;&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;电量低，请充电&#123;% endnote %&#125;&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;石头剪刀布&#123;% endnote %&#125;&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125; flat 你是刷 Visa 还是 UnionPay 新年快乐哦~ 司机一滴酒，亲人两行泪 大风车吱呀吱哟哟地转 电量低，请充电 石头剪刀布 前端最讨厌的浏览器 &#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;新年快乐哦~&#123;% endnote %&#125;&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;司机一滴酒，亲人两行泪&#123;% endnote %&#125;&#123;% note red &#x27;fas fa-fan&#x27; flat %&#125;大风车吱呀吱哟哟地转&#123;% endnote %&#125;&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;电量低，请充电&#123;% endnote %&#125;&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;石头剪刀布&#123;% endnote %&#125;&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125; disabled 你是刷 Visa 还是 UnionPay 新年快乐哦~ 司机一滴酒，亲人两行泪 大风车吱呀吱哟哟地转 电量低，请充电 石头剪刀布 前端最讨厌的浏览器 &#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;新年快乐哦~&#123;% endnote %&#125;&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;司机一滴酒，亲人两行泪&#123;% endnote %&#125;&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;大风车吱呀吱哟哟地转&#123;% endnote %&#125;&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;电量低，请充电&#123;% endnote %&#125;&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;石头剪刀布&#123;% endnote %&#125;&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125; Gallery相册图库 &lt;div class=&quot;gallery-group-main&quot;&gt;&#123;% galleryGroup name description link img-url %&#125;&#123;% galleryGroup name description link img-url %&#125;&#123;% galleryGroup name description link img-url %&#125;&lt;/div&gt; name：相册图库名字 description：相册图库描述 link：链接到对应相册图库的地址 img-url：相册图库封面的地址 Gallery相册 &#123;% gallery %&#125;markdown 图片格式&#123;% endgallery %&#125; tag-hide(隐藏文字) tag-hide 内的标签外挂 content 内都不建议有 h1 - h6 等标题。因为 Toc 会把隐藏内容标题也显示出来，而且当滚动屏幕时，如果隐藏内容没有显示出来，会导致 To 的滚动出现异常。 InlineInlineInlineinline在文本里面添加按钮隐藏内容，只限文字(content不能包含英文逗号，可用&amp;sbquo;) &#123;% hideInline content,display,bg,color %&#125; content：文本内容 display：按钮显示的文字(可选) bg：按钮的背景颜色(可选) color：按钮文字的颜色(可选) block独立的 block 隐藏内容，可以隐藏很多内容，包括图片，代码块等等(display 不能包含英文逗号，可用&amp;sbquo;) &#123;% hideBlock display,bg,color %&#125;content&#123;% endhideBlock %&#125; content：文本内容 display：按钮显示的文字(可选) bg：按钮的背景颜色(可选) color：按钮文字的颜色(可选) 如果需要展示的内容太多，可以把它隐藏在收缩框里，需要时再把它展开。(display 不能包含英文逗号，可用&amp;sbquo;) &#123;% hideToggle display,bg,color %&#125;content&#123;% endhideToggle %&#125; content：文本内容 display：按钮显示的文字(可选) bg：按钮的背景颜色(可选) color：按钮文字的颜色(可选) mermaid mermaid 标签不允许嵌套于 tag-hide 内的标签外挂和 tabs 标签外挂标签外挂，会影响显示。 使用 mermaid 标签可以绘制 Flowchart（流程图）、Sequence diagram（时序图 ）、Class Diagram（类别图）、State Diagram（状态图）、Gantt（甘特图）和 Pie Chart（圆形图），具体可以查看mermaid文档 修改主题配置文件 mermaid: enable: true # built-in themes: default/forest/dark/neutral theme: default &#123;% mermaid %&#125;内容&#123;% endmermaid %&#125; Tabs &#123;% tabs Unique name, [index] %&#125;&lt;!-- tab [Tab caption] [@icon] --&gt;Any content (support inline tags too).&lt;!-- endtab --&gt;&#123;% endtabs %&#125;Unique name : Unique name of tabs block tag without comma. Will be used in #id&#x27;s as prefix for each tab with their index numbers. If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes. Only for current url of post/page must be unique![index] : Index number of active tab. If not specified, first tab (1) will be selected. If index is -1, no tab will be selected. It&#x27;s will be something like spoiler. Optional parameter.[Tab caption] : Caption of current tab. If not caption specified, unique name with tab index suffix will be used as caption of tab. If not caption specified, but specified icon, caption will empty. Optional parameter.[@icon] : FontAwesome icon name (full-name, look like &#x27;fas fa-font&#x27;) Can be specified with or without space; e.g. &#x27;Tab caption @icon&#x27; similar to &#x27;Tab caption@icon&#x27;. Optional parameter. Button &#123;% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %&#125;[url] : 链接[text] : 按钮文字[icon] : [可选] 图标[color] : [可选] 按钮背景顔色(默认style时） 按钮字体和边框顔色(outline时) default/blue/pink/red/purple/orange/green[style] : [可选] 按钮样式 默认实心 outline/留空[layout] : [可选] 按钮佈局 默认为line block/留空[position] : [可选] 按钮位置 前提是设置了layout为block 默认为左边 center/right/留空[size] : [可选] 按钮大小 larger/留空 hexo的自带标签外挂 请参照Hexo官方文档中的做法 动画图标 注意：如果使用 On parent hover 需要向父级元素添加 class 名 faa-parent animated-hover，其余两个不需要。另外可以通过添加faa-fast动画加速，faa-slow动画减速！！ 添加方式很简单，引入一个 css 库： https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/font-awesome-animation.min.css 然后在 DOM 元素的类名添加相应的动画即可。 On DOM load On hover On parent hover faa-wrench animated faa-wrench animated-hover faa-wrench faa-ring animated faa-ring animated-hover faa-ring faa-horizontal animated faa-horizontal animated-hover faa-horizontal faa-vertical animated faa-vertical animated-hover faa-vertical faa-flash animated faa-flash animated-hover faa-flash faa-bounce animated faa-bounce animated-hover faa-bounce faa-spin animated faa-spin animated-hover faa-spin faa-float animated faa-float animated-hover faa-float faa-pulse animated faa-pulse animated-hover faa-pulse faa-shake animated faa-shake animated-hover faa-shake faa-tada animated faa-tada animated-hover faa-tada faa-passing animated faa-passing animated-hover faa-passing faa-passing-reverse animated faa-passing-reverse animated-hover faa-passing-reverse faa-burst animated faa-burst animated-hover faa-burst faa-falling animated faa-falling animated-hover faa-falling faa-rising animated faa-rising animated-hover faa-rising","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://lavender-z.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lavender-z.github.io/tags/hexo/"},{"name":"Github","slug":"Github","permalink":"https://lavender-z.github.io/tags/Github/"},{"name":"博客","slug":"博客","permalink":"https://lavender-z.github.io/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"Butterfly","slug":"Butterfly","permalink":"https://lavender-z.github.io/tags/Butterfly/"}]},{"title":"利用 Hexo 和 Github 搭建一个属于自己的个人博客(基础)","slug":"Blog/BlogBuild","date":"2020-12-20T07:24:37.000Z","updated":"2021-01-23T18:37:44.625Z","comments":true,"path":"2020/12/20/Blog/BlogBuild/","link":"","permalink":"https://lavender-z.github.io/2020/12/20/Blog/BlogBuild/","excerpt":"","text":"写在最前面 博客的搭建有很多种，可以利用第三方平台，也可以自建。比较早的有博客园、CSDN，近几年新兴的也比较多诸如：WordPress、SegmentFault、简书、掘金、知乎专栏、Github Page 等等。 这次我要介绍的就是利用 Github Page 和 Hexo 搭建个人博客的方式。Github Page 是 Github 提供的一种免费的静态网页托管服务（所以想想免费的空间不用也挺浪费的哈哈哈），可以用来托管博客、项目官网等静态网页。支持 Jekyll、Hugo、Hexo 编译静态资源，这次我们的主角就是 Hexo 了，具体的内容下面在文章内介绍。下面就开始吧~ 准备工作 Node.js 和 Git 的安装是搭建个人博客的第一步。下面我会详细的介绍如何安装 Node.js 和 Git。 点击查看 Node.js安装与配置Git安装与配置Github注册以及Github Pages创建配置Git用户名和邮箱首先去Node.js官网，下载 node.js 的安装程序，根据你电脑系统的配置信息，下载对应的安装程序，然后开始进行下面的步骤。 下载好与电脑系统对应的安装程序后，开始安装流程： 1.点击 Next 2.将&quot;I accept the terms in the License Agreement&quot;前面的复选框勾选，同意安装协议，再点 Next，进行下一步操作 3.选择 Node.js 安装程序的安装位置，在这里我以&quot;C:\\Program Files\\nodejs&quot;为例，点击 Next，进入下一步操作 4.选择安装的模块和功能，这里全部安装，并添加到系统环境变量 ，继续点击 Next，进入下一步操作 5.这一步可以跳过，这个选项的意思是安装一些编译本地模块的工具，比如 python，C/C++ 等，点击 Next，进入下一步 6.点击&quot;Install&quot;，等待 Node.js 安装完成 7.当看到下图所显示的情况，Node.js 就成功安装完毕 8.验证安装，并测试 Node.js 是否加入环境变量，当出现如下图的情况，Node.js 安装大功告成 如果执行node -v报错的话，那么手动将 Node.js 的安装路径添加到环境变量中，右击点击我的电脑 ——&gt; 属性 ——&gt; 高级系统设置 ——&gt; 环境变量，在系统变量下找到名为 path 的变量名，如下图： 选中 path，或者双击，然后将你 node.js 的安装路径放在 path 变量值的最后面，如果添加之前 path 值最后有英文的分号，则直接将路径添加进去即可，如果没有，先添加分号，然后点击保存，回到桌面，打开cmd（Win+R），执行node -v，看是否成功。 9.设置 npm 的镜像源 # 查看npm的配置npm config list# 默认源npm config set registry https://registry.npmjs.org# 临时改变镜像源npm --registry=https://registry.npm.taobao.org# 永久设置为淘宝镜像源npm config set registry https://registry.npm.taobao.org# 另一种方式，编辑 ~/.npmrc 加入下面内容registry = https://registry.npm.taobao.org 10.设置 npm 的内置路径 ——&gt; 全局模块路径和缓存路径（可选） 如果不改变内置路径也可，除非你的 C 盘空间足够 bigger，这一步可以略过，不改变的话，它的路径在： 此处参考：node 环境变量配置，npm 环境变量配置 ● npm 包全局目录：C:/Users/[username]/AppData/Roaming/npm/node_modules ● npm 包全局命令目录：C:/Users/[username]/AppData/Roaming/npm ● npm 实际去找全局命令的目录：C:/Users/[username]/.npmrc文件内容的prefix值 ● npm 包全局cache目录：C:/Users/[username]/.npmrc文件内容的cache值 首先在你 Node.js 的安装位置，新建两个文件夹，node_global和node_cache，我的路径是： D:\\Learning\\nodejs\\node_globalD:\\Learning\\nodejs\\node_cache 然后分别执行的命令就是： npm config set prefix&quot;D:\\Learning\\nodejs\\node_global&quot;npm config set cache &quot;D:\\Learning\\nodejs\\node_cache&quot; 然后在配置环境变量，右击我的电脑 ——&gt; 属性 ——&gt; 高级系统设置 ——&gt; 环境变量同样的位置，在用户变量的地方，找到 path 变量进行修改，修改值如下图。然后就大功告成了，Node.js 就安装完毕了。 首先就是去Git官网下载 Git，根据你电脑系统的配置信息，下载对应的安装程序，然后开始进行下面的步骤。 1.下载好 Git 的安装包，开始安装，打开安装包，出现如图的界面，点击 Next 2.选择你要安装的位置，我以 C 盘为例，路径为图中所示，安装到其他位置的话，点击 Browse，选择你要安装的位置，然后点击 Next，进入下一步 3.选择你是否创建桌面快捷放方式，其他默认即可，点击 Next，进入下一步 4.是否将 Git 快捷方式的目录加入开是菜单栏 5.这个是选择文本编辑器的方式，默认是 Vim，也可以选择其他的方式，自主选择，在这里我选择的 Vim 默认方式。选择好文本编辑器的方式后，点击 Next，进入下一个流程 6.选择安装 Git 时对环境变量 PATH 的影响，第一种影响较小，第三种会影响到 Windows 的自带工具，默认勾选中间项，建议不要修改，直接点击 Next 继续安装 7.选择 Git 在使用 HTTPS 时使用的库，若无特殊需求，可保持默认选项，点击 Next 继续安装 8.选择提交与拉取记录时，对换行符的处理方式，若无特殊需要，默认选择即可，点击 Next 继续安装 9.选择模拟终端软件（即命令行窗口软件），若无特殊需要，可默认选择，点击 Next 继续安装 10.最新功能的询问，若不想尝试尚未保证稳定性的新功能，默认不勾选，点击 Install 即可完成安装 11.安装完成 12.回到桌面，点击鼠标右键，会出现两个选项Git GUI Here和Git Bash Here，在打开 Cmd(Win+R)，分别输入git和git --version，如果出现如下图的情况，即安装成功 1.打开Github官网首页，点击右上角的Sign Up，然后在出现的页面上填写你的相关信息，进行注册 2.验证完成后，点击 Next：Select a plan，会出现如上图的验证界面，同理，只需要将其中的动物调整为正向显示即可。接着会出现下图的界面，选择 Free，下方的两个选项可选可不选，点击 Continue 继续 3.这时 Github 会给你发一封邮件，验证一下即可，验证过后才可以创建库 4.验证完成后，开始创建库，如下图所示，仓库名创建格式必须为：&lt;用户名&gt;.github.io，Description为描述仓库，自定义写，填写必要的描述，也可不填。勾选Initialize this repository with a README点击Creat repository进行创建 然后就会出现如图所示的界面，即仓库创建成功！ 5.我们来测试一下，点击Create new file，出现如下界面，然后命名文件名为index.html，在填写如图的内容，再点击Commit new file，即创建成功，然后打开一个新的网页，输入网址https://&lt;你的用户名&gt;.github.io，即可以看见一个新的网页，其中的内容就是你写的内容。至此，Github 的注册以及 Github Pages 已经创建完成了1.在桌面点击鼠标右键，点击Git Bash Here，会出现一个界面如下图所示 2.然后分别输入下面的两个命令，并回车 $ git config --global user.name &quot;此处填写你注册时的用户名&quot;$ git config --global user.email &quot;此处填写你注册时的邮箱&quot;# 一般只要不报错，可以跳过下面寻找.gitconfig文件 3.然后找到.gitconfig文件，文件存放位置在C:/Users/[username]/.gitconfig（未找到的话，请开启显示隐藏文件的功能），用编辑器打开，看到如下图所示的内容，即配置成功 本地安装 hexo 静态博客框架以及发布到 Github Pages 1.首先选择一个磁盘作为你博客文件的存放位置，然后新建一个文件夹，比如名为 MyBlog 的文件夹，创建完后，先不要点进去，在此处点击鼠标右键，选择Git Bash Here，然后依次输入如下命令 # hexo框架的安装$ npm install -g hexo-cli# 等上一个命令完成后，在输入下面的命令$ hexo init &lt;新建文件夹的名称&gt; #初始化文件夹$ cd &lt;新建文件夹的名称&gt;$ npm install # 安装博客所需要的依赖文件 2.等待运行完成，此时文件夹中多了许多文件 注意：后续的命令均需要在站点目录下（即文件夹内）使用 Git Bash 运行 此时 Hexo 框架的本地搭建已经完成了。我们来运行一下看看，命令行依次输入以下命令 $ hexo g$ hexo s 3.浏览器中打开http://locakhost:4000或者127.0.0.1:4000，可以看到一个网页，说明 Hexo 博客已经成功在本地运行 本地博客发布到 Github Pages 之前的步骤中，我们已经完成了对 Github 账户的注册以及 Github Pages 的创建，接下来是将本地博客发布至 Github Pages。 1.首先需要安装发布的插件，在站点目录下执行下面的命令，也就是创建的博客目录下 $ npm install hexo-deployer-git --save 2.紧接着，将本地目录与 GitHub 关联起来，输入下面的命令行 $ ssh-keygen -t rsa -C &quot;你的邮箱地址&quot; 输入后一直回车，然后在C:/Users/[username]目录下找到名为.ssh的文件夹， 文件夹内会有两个文件，一个id_rsa.pub一个id_rsa，用文本编辑器打开id_rsa.pub，复制里面的的内容。 然后打开 Github，点击右上角的头像Settings选择SSH and GPG keys 点击New SSH key将之前复制的内容粘帖到Key的框中。 上面的Title可以随意，点击Add SSH key完成添加。 然后回到 Git 的命令行界面，测试一下是否与 GitHub 连接成功。输入下面的命令行 $ ssh -T git@github.com 点击回车，然后会出现一个询问内容，输入yes，回车，会出现一段内容Hi &lt;account name&gt;! You've successfully authenticated, but GitHub doesnot provide shell access.。 说明连接成功。此处这个&lt;account name&gt;应该是你 Github 的用户名。 3.进入博客站点目录，用文本编辑器打开_config.yml，这个_config.yml是博客的配置文件，在以后的博客修改，如个性化修改，博客SEO优化等都会使用到，修改如下几个地方 title: 你的博客名subtitle: 博客的副标题，有些主题支持description: 博客描述keywords: 博客关键词author: 作者，在文章中显示language: 博客语言语种 timezone: 时区 4.在该文件最底部，有一个 deploy，在 deploy 下面添加一个 repo 项 ，一个 branch 项，填入如下代码 deploy type: git repo: git@github.com:Github用户名&#x2F;github用户名.github.io.git &#x2F;&#x2F;也可使用https地址，如：https:&#x2F;&#x2F;github.com&#x2F;Github用户名&#x2F;Github用户名.github.io.git branch: master 5.最后就是生成页面，并发布至 Github Pages，执行如下命令 # Hexo会根据配置文件渲染出一套静态页面$ hexo g# 将上一步渲染出的一系列文件上传至至Github Pages$ hexo d# 也可以直接输入此命令，直接完成渲染和上传$ hexo g -d 上传完成后，在浏览器中打开https://&lt;用户名&gt;.github.io，查看上传的网页。如果页面变成了之前本地调试时的样子，说明上传以及完成了。没变的话查看一下上传时命令行窗口的信息有没有错误信息，没有的话清除一下浏览器缓存试试。 网页部署阶段可能会出现的 bug 报错ERROR Deployer not found: git 1.git 用户名和邮箱配置错误 $ git config --global user.name%&quot;username&quot;$ git config --global user.email%&quot;username@example.com&quot; 这里的%，在正确的格式中是一个空格，如果你之前没有打空格，那么邮箱和用户名根本就没有记录进去。回退到这一步重新进行。 2.hexo-deployer-git插件没有安装正确，重新在[Blogroot]路径下右键 ——&gt; Git Bash Here，执行： $ npm install hexo-deployer-git –save# 重新安装之后，再尝试提交$ hexo d","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://lavender-z.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lavender-z.github.io/tags/hexo/"},{"name":"Github","slug":"Github","permalink":"https://lavender-z.github.io/tags/Github/"},{"name":"博客","slug":"博客","permalink":"https://lavender-z.github.io/tags/%E5%8D%9A%E5%AE%A2/"}]}],"categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://lavender-z.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lavender-z.github.io/tags/hexo/"},{"name":"Github","slug":"Github","permalink":"https://lavender-z.github.io/tags/Github/"},{"name":"博客","slug":"博客","permalink":"https://lavender-z.github.io/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"Matery","slug":"Matery","permalink":"https://lavender-z.github.io/tags/Matery/"},{"name":"Butterfly","slug":"Butterfly","permalink":"https://lavender-z.github.io/tags/Butterfly/"}]}